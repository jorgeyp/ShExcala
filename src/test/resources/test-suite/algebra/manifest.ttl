@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix : <http://www.w3.org/2001/sw/DataAccess/tests/data-r2/algebra/manifest#> .
@prefix rdfs:	<http://www.w3.org/2000/01/rdf-schema#> .
@prefix mf:     <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix qt:     <http://www.w3.org/2001/sw/DataAccess/tests/test-query#> .
@prefix dawgt:   <http://www.w3.org/2001/sw/DataAccess/tests/test-dawg#> .

<>  rdf:type mf:Manifest ;
    rdfs:label 'connectives' ;
    mf:entries
    (
        :ab-ab
        :ab-0
        :ab-a
        :ab-b
        :ab-_B
        :a_OPTb_OPT-a
        :a_OPTb_OPT-b
        :a_OPTb_OPT-a_B
        :a_OPTb-0
        :a_OPTb-_B
        :ab_OPT-0
        :ab-_A_B
        :ab-_Ab
        :ab-_A
        :ab_OPT-_A
        :a_OR_b-a
        :a_OR_b-b
        :a_OR_b-_Ab
        :a_OR_b-a_B
        :a_OR_b-0
        :a_OR_b-ab
        :a_OR_b-_A
        :a_OR_b-_B
        :a_OR_b-_A_B
        :a_OPT_OR_b_OPT-0
        :a_OPT_OR_b_OPT-a
        :a_OPT_OR_b_OPT-b
        :a_OPT_OR_b_OPT-ab
        :a_OR_b_OPT-0
        :a_OR_b_OPT-_A
        :a_OPT_OR_b-0
        :a_OPT_OR_b-_B
        :(a_OR_b)c-ab
        :(a_OR_b)c_OPT-ab
        :(a_OR_b)c_OPT-abc
        :(a_OR_b)c_OPT-ab_C
        :a(b_OR_c)-bc
        :a_OPT(b_OR_c)-abc
        :a_OPT(b_OR_c)-_Abc
        :a_OPT(b_OR_c)-bc
        :(a_OR_b)(c_OR_d)-abcd
        :(a_OR_b)_OR_c-ab
        :(a_OR_b)_OR_c_OPT-ab
        :(a_OR_b)_OR_c_OPT-abc
        :(a_OR_b)_OR_c_OPT-ab_C
        :a_OR_(b_OR_c)-bc
        :a_OPT_OR_(b_OR_c)-abc
        :a_OPT_OR_(b_OR_c)-_Abc
        :a_OPT_OR_(b_OR_c)-bc
        :(a_OR_b)_OR_(c_OR_d)-abcd
        :(a_OR_b)_OPT-ab
        :(a_OPTb_OPT)_OPT-0
        :(a)_OPT-0
        :(a)_OPT-a
        :(a)_OPT-_A
        :a-a
        :a-_A
        :a-b
        :a_OPT-0
        :a_OPT-a
        :a_OPT-aa
        :a+-a
        :a+-aa
        :a+-0
        :a*-a
        :a*-aa
        :a*-aaa
        :a*-ab
        :(a+)_OPT-0
        :(a+)_OPT-a
        :(a+)_OPT-aa
        :ab-ac
        :ab-a_B
        :abc-abc
        :abc-a
        :abc-b
        :abc-c
        :abc-ab
        :abc-ac
        :abc-bc
        :(ab)c-abc
        :(ab)c-a
        :(ab)c-b
        :(ab)c-c
        :(ab)c-ab
        :(ab)c-ac
        :(ab)c-bc
        :a+bc-abc
        :a+bc-aabc
        :a+bc-bc
        :a_OPTb_OPT-_Ab
        :a_OR_b_OR_c-a
        :a_OR_b_OR_c-b
        :a_OR_b_OR_c-c
        :a_OR_b_OR_c-_A_Bc
        :a_OR_b_OR_c-a_B_C
        :a_OR_b_OR_c-0
        :a_OR_b_OR_c-ab
        :a_OR_b_OR_c-ac
        :a_OR_b_OR_c-bc
        :a_OR_b_OR_c-abc
        :a_OR_b_OR_c-ab_C
        :(a)_OPTb-b
        :(a)_OPTb-ab
        :(a)_OPTb-a
        :a(b)_OPT-a
        :a(b)_OPT-ab
        :a(b)_OPT-b
        :(ab)_OPT-0
        :(ab)_OPT-ab
        :(ab)_OPT-a
        :(ab)_OPT-b
        :a+(b)c-abc
        :a+(b)c-aabc
        :a+(b)c-bc
        :(a_OPTb_OPT)_OPT-a
        :(a_OPTb_OPT)_OPT-b
        :(a_OPTb_OPT)_OPT-ab
        :(a_OPTb)_OPT-0
        :(a_OPTb)_OPT-b
        :(a_OPTb)_OPT-ab
        :(a_OPTb)_OPT-a
        :(ab_OPT)_OPT-0
        :(ab_OPT)_OPT-a
        :(ab_OPT)_OPT-ab
        :(ab_OPT)_OPT-b
        :a_OR_(b)-a
        :a_OR_(b)-b
        :a_OR_(b)-0
        :a_OR_(b)-ab
        :(a_OR_b)-a
        :(a_OR_b)-b
        :(a_OR_b)-0
        :(a_OR_b)-ab
        :a(b_OR_c)-ab
        :a(b_OR_c)-ac
        :a(b_OR_c)-a
        :a(b_OR_c)-abc
        :((ab)_OPTc)_OPT-0
        :((ab)_OPTc)_OPT-c
        :((ab)_OPTc)_OPT-abc
        :((ab)_OPTc)_OPT-a
        :((ab)_OPTc)_OPT-b
        :((ab)_OPTc)_OPT-ab
        :((ab_OPT)_OPTc)_OPT-0
        :((ab_OPT)_OPTc)_OPT-c
        :((ab_OPT)_OPTc)_OPT-ac
        :((ab_OPT)_OPTc)_OPT-abc
        :((ab_OPT)_OPTc)_OPT-a
        :((ab_OPT)_OPTc)_OPT-b
        :((ab_OPT)_OPTc)_OPT-ab
        :((ab_OPT)_OPTc)_OPT-bc
        :((a_OPTb)_OPTc)_OPT-0
        :((a_OPTb)_OPTc)_OPT-c
        :((a_OPTb)_OPTc)_OPT-bc
        :((a_OPTb)_OPTc)_OPT-abc
        :((a_OPTb)_OPTc)_OPT-a
        :((a_OPTb)_OPTc)_OPT-b
        :((a_OPTb)_OPTc)_OPT-ab
        :((a_OPTb)_OPTc)_OPT-ac
    ) .

:ab-ab a mf:ShExEvaluationTest ;
    mf:name "ab ab" ;    mf:action [
        qt:schema <ab.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result true .

:ab-0 a mf:ShExEvaluationTest ;
    mf:name "ab 0" ;    mf:action [
        qt:schema <ab.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result false .

:ab-a a mf:ShExEvaluationTest ;
    mf:name "ab a" ;    mf:action [
        qt:schema <ab.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result false .

:ab-b a mf:ShExEvaluationTest ;
    mf:name "ab b" ;    mf:action [
        qt:schema <ab.shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result false .

:ab-_B a mf:ShExEvaluationTest ;
    mf:name "ab _B" ;    mf:action [
        qt:schema <ab.shex> ;
        qt:data <_B.ttl>
    ] ;
    mf:result false .

:a_OPTb_OPT-a a mf:ShExEvaluationTest ;
    mf:name "a_OPTb_OPT a" ;    mf:action [
        qt:schema <a_OPTb_OPT.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result true .

:a_OPTb_OPT-b a mf:ShExEvaluationTest ;
    mf:name "a_OPTb_OPT b" ;    mf:action [
        qt:schema <a_OPTb_OPT.shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result true .

:a_OPTb_OPT-a_B a mf:ShExEvaluationTest ;
    mf:name "a_OPTb_OPT a_B" ;    mf:action [
        qt:schema <a_OPTb_OPT.shex> ;
        qt:data <a_B.ttl>
    ] ;
    mf:result false .

:a_OPTb-0 a mf:ShExEvaluationTest ;
    mf:name "a_OPTb 0" ;    mf:action [
        qt:schema <a_OPTb.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result false .

:a_OPTb-_B a mf:ShExEvaluationTest ;
    mf:name "a_OPTb _B" ;    mf:action [
        qt:schema <a_OPTb.shex> ;
        qt:data <_B.ttl>
    ] ;
    mf:result false .

:ab_OPT-0 a mf:ShExEvaluationTest ;
    mf:name "ab_OPT 0" ;    mf:action [
        qt:schema <ab_OPT.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result false .

:ab-_A_B a mf:ShExEvaluationTest ;
    mf:name "ab _A_B" ;    mf:action [
        qt:schema <ab.shex> ;
        qt:data <_A_B.ttl>
    ] ;
    mf:result false .

:ab-_Ab a mf:ShExEvaluationTest ;
    mf:name "ab _Ab" ;    mf:action [
        qt:schema <ab.shex> ;
        qt:data <_Ab.ttl>
    ] ;
    mf:result false .

:ab-_A a mf:ShExEvaluationTest ;
    mf:name "ab _A" ;    mf:action [
        qt:schema <ab.shex> ;
        qt:data <_A.ttl>
    ] ;
    mf:result false .

:ab_OPT-_A a mf:ShExEvaluationTest ;
    mf:name "ab_OPT _A" ;    mf:action [
        qt:schema <ab_OPT.shex> ;
        qt:data <_A.ttl>
    ] ;
    mf:result false .

:a_OR_b-a a mf:ShExEvaluationTest ;
    mf:name "a_OR_b a" ;    mf:action [
        qt:schema <a_OR_b.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result true .

:a_OR_b-b a mf:ShExEvaluationTest ;
    mf:name "a_OR_b b" ;    mf:action [
        qt:schema <a_OR_b.shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result true .

:a_OR_b-_Ab a mf:ShExEvaluationTest ;
    mf:name "a_OR_b _Ab" ;    mf:action [
        qt:schema <a_OR_b.shex> ;
        qt:data <_Ab.ttl>
    ] ;
    mf:result true .

:a_OR_b-a_B a mf:ShExEvaluationTest ;
    mf:name "a_OR_b a_B" ;    mf:action [
        qt:schema <a_OR_b.shex> ;
        qt:data <a_B.ttl>
    ] ;
    mf:result true .

:a_OR_b-0 a mf:ShExEvaluationTest ;
    mf:name "a_OR_b 0" ;    mf:action [
        qt:schema <a_OR_b.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result false .

:a_OR_b-ab a mf:ShExEvaluationTest ;
    mf:name "a_OR_b ab" ;    mf:action [
        qt:schema <a_OR_b.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result false .

:a_OR_b-_A a mf:ShExEvaluationTest ;
    mf:name "a_OR_b _A" ;    mf:action [
        qt:schema <a_OR_b.shex> ;
        qt:data <_A.ttl>
    ] ;
    mf:result false .

:a_OR_b-_B a mf:ShExEvaluationTest ;
    mf:name "a_OR_b _B" ;    mf:action [
        qt:schema <a_OR_b.shex> ;
        qt:data <_B.ttl>
    ] ;
    mf:result false .

:a_OR_b-_A_B a mf:ShExEvaluationTest ;
    mf:name "a_OR_b _A_B" ;    mf:action [
        qt:schema <a_OR_b.shex> ;
        qt:data <_A_B.ttl>
    ] ;
    mf:result false .

:a_OPT_OR_b_OPT-0 a mf:ShExEvaluationTest ;
    mf:name "a_OPT_OR_b_OPT 0" ;    mf:action [
        qt:schema <a_OPT_OR_b_OPT.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result true .

:a_OPT_OR_b_OPT-a a mf:ShExEvaluationTest ;
    mf:name "a_OPT_OR_b_OPT a" ;    mf:action [
        qt:schema <a_OPT_OR_b_OPT.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result true .

:a_OPT_OR_b_OPT-b a mf:ShExEvaluationTest ;
    mf:name "a_OPT_OR_b_OPT b" ;    mf:action [
        qt:schema <a_OPT_OR_b_OPT.shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result true .

:a_OPT_OR_b_OPT-ab a mf:ShExEvaluationTest ;
    mf:name "a_OPT_OR_b_OPT ab" ;    mf:action [
        qt:schema <a_OPT_OR_b_OPT.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result false .

:a_OR_b_OPT-0 a mf:ShExEvaluationTest ;
    mf:name "a_OR_b_OPT 0" ;    mf:action [
        qt:schema <a_OR_b_OPT.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result true .

:a_OR_b_OPT-_A a mf:ShExEvaluationTest ;
    mf:name "a_OR_b_OPT _A" ;    mf:action [
        qt:schema <a_OR_b_OPT.shex> ;
        qt:data <_A.ttl>
    ] ;
    mf:result true .

:a_OPT_OR_b-0 a mf:ShExEvaluationTest ;
    mf:name "a_OPT_OR_b 0" ;    mf:action [
        qt:schema <a_OPT_OR_b.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result true .

:a_OPT_OR_b-_B a mf:ShExEvaluationTest ;
    mf:name "a_OPT_OR_b _B" ;    mf:action [
        qt:schema <a_OPT_OR_b.shex> ;
        qt:data <_B.ttl>
    ] ;
    mf:result true .

:(a_OR_b)c-ab a mf:ShExEvaluationTest ;
    mf:name "(a_OR_b)c ab" ;    mf:action [
        qt:schema <(a_OR_b)c.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result false .

:(a_OR_b)c_OPT-ab a mf:ShExEvaluationTest ;
    mf:name "(a_OR_b)c_OPT ab" ;    mf:action [
        qt:schema <(a_OR_b)c_OPT.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result false .

:(a_OR_b)c_OPT-abc a mf:ShExEvaluationTest ;
    mf:name "(a_OR_b)c_OPT abc" ;    mf:action [
        qt:schema <(a_OR_b)c_OPT.shex> ;
        qt:data <abc.ttl>
    ] ;
    mf:result false .

:(a_OR_b)c_OPT-ab_C a mf:ShExEvaluationTest ;
    mf:name "(a_OR_b)c_OPT ab_C" ;    mf:action [
        qt:schema <(a_OR_b)c_OPT.shex> ;
        qt:data <ab_C.ttl>
    ] ;
    mf:result false .

:a(b_OR_c)-bc a mf:ShExEvaluationTest ;
    mf:name "a(b_OR_c) bc" ;    mf:action [
        qt:schema <a(b_OR_c).shex> ;
        qt:data <bc.ttl>
    ] ;
    mf:result false .

:a_OPT(b_OR_c)-abc a mf:ShExEvaluationTest ;
    mf:name "a_OPT(b_OR_c) abc" ;    mf:action [
        qt:schema <a_OPT(b_OR_c).shex> ;
        qt:data <abc.ttl>
    ] ;
    mf:result false .

:a_OPT(b_OR_c)-_Abc a mf:ShExEvaluationTest ;
    mf:name "a_OPT(b_OR_c) _Abc" ;    mf:action [
        qt:schema <a_OPT(b_OR_c).shex> ;
        qt:data <_Abc.ttl>
    ] ;
    mf:result false .

:a_OPT(b_OR_c)-bc a mf:ShExEvaluationTest ;
    mf:name "a_OPT(b_OR_c) bc" ;    mf:action [
        qt:schema <a_OPT(b_OR_c).shex> ;
        qt:data <bc.ttl>
    ] ;
    mf:result false .

:(a_OR_b)(c_OR_d)-abcd a mf:ShExEvaluationTest ;
    mf:name "(a_OR_b)(c_OR_d) abcd" ;    mf:action [
        qt:schema <(a_OR_b)(c_OR_d).shex> ;
        qt:data <abcd.ttl>
    ] ;
    mf:result false .

:(a_OR_b)_OR_c-ab a mf:ShExEvaluationTest ;
    mf:name "(a_OR_b)_OR_c ab" ;    mf:action [
        qt:schema <(a_OR_b)_OR_c.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result false .

:(a_OR_b)_OR_c_OPT-ab a mf:ShExEvaluationTest ;
    mf:name "(a_OR_b)_OR_c_OPT ab" ;    mf:action [
        qt:schema <(a_OR_b)_OR_c_OPT.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result false .

:(a_OR_b)_OR_c_OPT-abc a mf:ShExEvaluationTest ;
    mf:name "(a_OR_b)_OR_c_OPT abc" ;    mf:action [
        qt:schema <(a_OR_b)_OR_c_OPT.shex> ;
        qt:data <abc.ttl>
    ] ;
    mf:result false .

:(a_OR_b)_OR_c_OPT-ab_C a mf:ShExEvaluationTest ;
    mf:name "(a_OR_b)_OR_c_OPT ab_C" ;    mf:action [
        qt:schema <(a_OR_b)_OR_c_OPT.shex> ;
        qt:data <ab_C.ttl>
    ] ;
    mf:result false .

:a_OR_(b_OR_c)-bc a mf:ShExEvaluationTest ;
    mf:name "a_OR_(b_OR_c) bc" ;    mf:action [
        qt:schema <a_OR_(b_OR_c).shex> ;
        qt:data <bc.ttl>
    ] ;
    mf:result false .

:a_OPT_OR_(b_OR_c)-abc a mf:ShExEvaluationTest ;
    mf:name "a_OPT_OR_(b_OR_c) abc" ;    mf:action [
        qt:schema <a_OPT_OR_(b_OR_c).shex> ;
        qt:data <abc.ttl>
    ] ;
    mf:result false .

:a_OPT_OR_(b_OR_c)-_Abc a mf:ShExEvaluationTest ;
    mf:name "a_OPT_OR_(b_OR_c) _Abc" ;    mf:action [
        qt:schema <a_OPT_OR_(b_OR_c).shex> ;
        qt:data <_Abc.ttl>
    ] ;
    mf:result false .

:a_OPT_OR_(b_OR_c)-bc a mf:ShExEvaluationTest ;
    mf:name "a_OPT_OR_(b_OR_c) bc" ;    mf:action [
        qt:schema <a_OPT_OR_(b_OR_c).shex> ;
        qt:data <bc.ttl>
    ] ;
    mf:result false .

:(a_OR_b)_OR_(c_OR_d)-abcd a mf:ShExEvaluationTest ;
    mf:name "(a_OR_b)_OR_(c_OR_d) abcd" ;    mf:action [
        qt:schema <(a_OR_b)_OR_(c_OR_d).shex> ;
        qt:data <abcd.ttl>
    ] ;
    mf:result false .

:(a_OR_b)_OPT-ab a mf:ShExEvaluationTest ;
    mf:name "(a_OR_b)_OPT ab" ;    mf:action [
        qt:schema <(a_OR_b)_OPT.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result false .

:(a_OPTb_OPT)_OPT-0 a mf:ShExEvaluationTest ;
    mf:name "(a_OPTb_OPT)_OPT 0" ;    mf:action [
        qt:schema <(a_OPTb_OPT)_OPT.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result true .

:(a)_OPT-0 a mf:ShExEvaluationTest ;
    mf:name "(a)_OPT 0" ;    mf:action [
        qt:schema <(a)_OPT.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result true .

:(a)_OPT-a a mf:ShExEvaluationTest ;
    mf:name "(a)_OPT a" ;    mf:action [
        qt:schema <(a)_OPT.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result true .

:(a)_OPT-_A a mf:ShExEvaluationTest ;
    mf:name "(a)_OPT _A" ;    mf:action [
        qt:schema <(a)_OPT.shex> ;
        qt:data <_A.ttl>
    ] ;
    mf:result false .

:a-a a mf:ShExEvaluationTest ;
    mf:name "a a" ;    mf:action [
        qt:schema <a.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result true .

:a-_A a mf:ShExEvaluationTest ;
    mf:name "a _A" ;    mf:action [
        qt:schema <a.shex> ;
        qt:data <_A.ttl>
    ] ;
    mf:result false .

:a-b a mf:ShExEvaluationTest ;
    mf:name "a b" ;    mf:action [
        qt:schema <a.shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result false .

:a_OPT-0 a mf:ShExEvaluationTest ;
    mf:name "a_OPT 0" ;    mf:action [
        qt:schema <a_OPT.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result true .

:a_OPT-a a mf:ShExEvaluationTest ;
    mf:name "a_OPT a" ;    mf:action [
        qt:schema <a_OPT.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result true .

:a_OPT-aa a mf:ShExEvaluationTest ;
    mf:name "a_OPT aa" ;    mf:action [
        qt:schema <a_OPT.shex> ;
        qt:data <aa.ttl>
    ] ;
    mf:result false .

:a+-a a mf:ShExEvaluationTest ;
    mf:name "a+ a" ;    mf:action [
        qt:schema <a+.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result true .

:a+-aa a mf:ShExEvaluationTest ;
    mf:name "a+ aa" ;    mf:action [
        qt:schema <a+.shex> ;
        qt:data <aa.ttl>
    ] ;
    mf:result true .

:a+-0 a mf:ShExEvaluationTest ;
    mf:name "a+ 0" ;    mf:action [
        qt:schema <a+.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result false .

:a*-a a mf:ShExEvaluationTest ;
    mf:name "a* a" ;    mf:action [
        qt:schema <a*.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result true .

:a*-aa a mf:ShExEvaluationTest ;
    mf:name "a* aa" ;    mf:action [
        qt:schema <a*.shex> ;
        qt:data <aa.ttl>
    ] ;
    mf:result true .

:a*-aaa a mf:ShExEvaluationTest ;
    mf:name "a* aaa" ;    mf:action [
        qt:schema <a*.shex> ;
        qt:data <aaa.ttl>
    ] ;
    mf:result true .

:a*-ab a mf:ShExEvaluationTest ;
    mf:name "a* ab" ;    mf:action [
        qt:schema <a*.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result false .

:(a+)_OPT-0 a mf:ShExEvaluationTest ;
    mf:name "(a+)_OPT 0" ;    mf:action [
        qt:schema <(a+)_OPT.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result true .

:(a+)_OPT-a a mf:ShExEvaluationTest ;
    mf:name "(a+)_OPT a" ;    mf:action [
        qt:schema <(a+)_OPT.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result true .

:(a+)_OPT-aa a mf:ShExEvaluationTest ;
    mf:name "(a+)_OPT aa" ;    mf:action [
        qt:schema <(a+)_OPT.shex> ;
        qt:data <aa.ttl>
    ] ;
    mf:result true .

:ab-ac a mf:ShExEvaluationTest ;
    mf:name "ab ac" ;    mf:action [
        qt:schema <ab.shex> ;
        qt:data <ac.ttl>
    ] ;
    mf:result false .

:ab-a_B a mf:ShExEvaluationTest ;
    mf:name "ab a_B" ;    mf:action [
        qt:schema <ab.shex> ;
        qt:data <a_B.ttl>
    ] ;
    mf:result false .

:abc-abc a mf:ShExEvaluationTest ;
    mf:name "abc abc" ;    mf:action [
        qt:schema <abc.shex> ;
        qt:data <abc.ttl>
    ] ;
    mf:result true .

:abc-a a mf:ShExEvaluationTest ;
    mf:name "abc a" ;    mf:action [
        qt:schema <abc.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result false .

:abc-b a mf:ShExEvaluationTest ;
    mf:name "abc b" ;    mf:action [
        qt:schema <abc.shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result false .

:abc-c a mf:ShExEvaluationTest ;
    mf:name "abc c" ;    mf:action [
        qt:schema <abc.shex> ;
        qt:data <c.ttl>
    ] ;
    mf:result false .

:abc-ab a mf:ShExEvaluationTest ;
    mf:name "abc ab" ;    mf:action [
        qt:schema <abc.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result false .

:abc-ac a mf:ShExEvaluationTest ;
    mf:name "abc ac" ;    mf:action [
        qt:schema <abc.shex> ;
        qt:data <ac.ttl>
    ] ;
    mf:result false .

:abc-bc a mf:ShExEvaluationTest ;
    mf:name "abc bc" ;    mf:action [
        qt:schema <abc.shex> ;
        qt:data <bc.ttl>
    ] ;
    mf:result false .

:(ab)c-abc a mf:ShExEvaluationTest ;
    mf:name "(ab)c abc" ;    mf:action [
        qt:schema <(ab)c.shex> ;
        qt:data <abc.ttl>
    ] ;
    mf:result true .

:(ab)c-a a mf:ShExEvaluationTest ;
    mf:name "(ab)c a" ;    mf:action [
        qt:schema <(ab)c.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result false .

:(ab)c-b a mf:ShExEvaluationTest ;
    mf:name "(ab)c b" ;    mf:action [
        qt:schema <(ab)c.shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result false .

:(ab)c-c a mf:ShExEvaluationTest ;
    mf:name "(ab)c c" ;    mf:action [
        qt:schema <(ab)c.shex> ;
        qt:data <c.ttl>
    ] ;
    mf:result false .

:(ab)c-ab a mf:ShExEvaluationTest ;
    mf:name "(ab)c ab" ;    mf:action [
        qt:schema <(ab)c.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result false .

:(ab)c-ac a mf:ShExEvaluationTest ;
    mf:name "(ab)c ac" ;    mf:action [
        qt:schema <(ab)c.shex> ;
        qt:data <ac.ttl>
    ] ;
    mf:result false .

:(ab)c-bc a mf:ShExEvaluationTest ;
    mf:name "(ab)c bc" ;    mf:action [
        qt:schema <(ab)c.shex> ;
        qt:data <bc.ttl>
    ] ;
    mf:result false .

:a+bc-abc a mf:ShExEvaluationTest ;
    mf:name "a+bc abc" ;    mf:action [
        qt:schema <a+bc.shex> ;
        qt:data <abc.ttl>
    ] ;
    mf:result true .

:a+bc-aabc a mf:ShExEvaluationTest ;
    mf:name "a+bc aabc" ;    mf:action [
        qt:schema <a+bc.shex> ;
        qt:data <aabc.ttl>
    ] ;
    mf:result true .

:a+bc-bc a mf:ShExEvaluationTest ;
    mf:name "a+bc bc" ;    mf:action [
        qt:schema <a+bc.shex> ;
        qt:data <bc.ttl>
    ] ;
    mf:result false .

:a_OPTb_OPT-_Ab a mf:ShExEvaluationTest ;
    mf:name "a_OPTb_OPT _Ab" ;    mf:action [
        qt:schema <a_OPTb_OPT.shex> ;
        qt:data <_Ab.ttl>
    ] ;
    mf:result false .

:a_OR_b_OR_c-a a mf:ShExEvaluationTest ;
    mf:name "a_OR_b_OR_c a" ;    mf:action [
        qt:schema <a_OR_b_OR_c.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result true .

:a_OR_b_OR_c-b a mf:ShExEvaluationTest ;
    mf:name "a_OR_b_OR_c b" ;    mf:action [
        qt:schema <a_OR_b_OR_c.shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result true .

:a_OR_b_OR_c-c a mf:ShExEvaluationTest ;
    mf:name "a_OR_b_OR_c c" ;    mf:action [
        qt:schema <a_OR_b_OR_c.shex> ;
        qt:data <c.ttl>
    ] ;
    mf:result true .

:a_OR_b_OR_c-_A_Bc a mf:ShExEvaluationTest ;
    mf:name "a_OR_b_OR_c _A_Bc" ;    mf:action [
        qt:schema <a_OR_b_OR_c.shex> ;
        qt:data <_A_Bc.ttl>
    ] ;
    mf:result true .

:a_OR_b_OR_c-a_B_C a mf:ShExEvaluationTest ;
    mf:name "a_OR_b_OR_c a_B_C" ;    mf:action [
        qt:schema <a_OR_b_OR_c.shex> ;
        qt:data <a_B_C.ttl>
    ] ;
    mf:result true .

:a_OR_b_OR_c-0 a mf:ShExEvaluationTest ;
    mf:name "a_OR_b_OR_c 0" ;    mf:action [
        qt:schema <a_OR_b_OR_c.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result false .

:a_OR_b_OR_c-ab a mf:ShExEvaluationTest ;
    mf:name "a_OR_b_OR_c ab" ;    mf:action [
        qt:schema <a_OR_b_OR_c.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result false .

:a_OR_b_OR_c-ac a mf:ShExEvaluationTest ;
    mf:name "a_OR_b_OR_c ac" ;    mf:action [
        qt:schema <a_OR_b_OR_c.shex> ;
        qt:data <ac.ttl>
    ] ;
    mf:result false .

:a_OR_b_OR_c-bc a mf:ShExEvaluationTest ;
    mf:name "a_OR_b_OR_c bc" ;    mf:action [
        qt:schema <a_OR_b_OR_c.shex> ;
        qt:data <bc.ttl>
    ] ;
    mf:result false .

:a_OR_b_OR_c-abc a mf:ShExEvaluationTest ;
    mf:name "a_OR_b_OR_c abc" ;    mf:action [
        qt:schema <a_OR_b_OR_c.shex> ;
        qt:data <abc.ttl>
    ] ;
    mf:result false .

:a_OR_b_OR_c-ab_C a mf:ShExEvaluationTest ;
    mf:name "a_OR_b_OR_c ab_C" ;    mf:action [
        qt:schema <a_OR_b_OR_c.shex> ;
        qt:data <ab_C.ttl>
    ] ;
    mf:result false .

:(a)_OPTb-b a mf:ShExEvaluationTest ;
    mf:name "(a)_OPTb b" ;    mf:action [
        qt:schema <(a)_OPTb.shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result true .

:(a)_OPTb-ab a mf:ShExEvaluationTest ;
    mf:name "(a)_OPTb ab" ;    mf:action [
        qt:schema <(a)_OPTb.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result true .

:(a)_OPTb-a a mf:ShExEvaluationTest ;
    mf:name "(a)_OPTb a" ;    mf:action [
        qt:schema <(a)_OPTb.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result false .

:a(b)_OPT-a a mf:ShExEvaluationTest ;
    mf:name "a(b)_OPT a" ;    mf:action [
        qt:schema <a(b)_OPT.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result true .

:a(b)_OPT-ab a mf:ShExEvaluationTest ;
    mf:name "a(b)_OPT ab" ;    mf:action [
        qt:schema <a(b)_OPT.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result true .

:a(b)_OPT-b a mf:ShExEvaluationTest ;
    mf:name "a(b)_OPT b" ;    mf:action [
        qt:schema <a(b)_OPT.shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result false .

:(ab)_OPT-0 a mf:ShExEvaluationTest ;
    mf:name "(ab)_OPT 0" ;    mf:action [
        qt:schema <(ab)_OPT.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result true .

:(ab)_OPT-ab a mf:ShExEvaluationTest ;
    mf:name "(ab)_OPT ab" ;    mf:action [
        qt:schema <(ab)_OPT.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result true .

:(ab)_OPT-a a mf:ShExEvaluationTest ;
    mf:name "(ab)_OPT a" ;    mf:action [
        qt:schema <(ab)_OPT.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result false .

:(ab)_OPT-b a mf:ShExEvaluationTest ;
    mf:name "(ab)_OPT b" ;    mf:action [
        qt:schema <(ab)_OPT.shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result false .

:a+(b)c-abc a mf:ShExEvaluationTest ;
    mf:name "a+(b)c abc" ;    mf:action [
        qt:schema <a+(b)c.shex> ;
        qt:data <abc.ttl>
    ] ;
    mf:result true .

:a+(b)c-aabc a mf:ShExEvaluationTest ;
    mf:name "a+(b)c aabc" ;    mf:action [
        qt:schema <a+(b)c.shex> ;
        qt:data <aabc.ttl>
    ] ;
    mf:result true .

:a+(b)c-bc a mf:ShExEvaluationTest ;
    mf:name "a+(b)c bc" ;    mf:action [
        qt:schema <a+(b)c.shex> ;
        qt:data <bc.ttl>
    ] ;
    mf:result false .

:(a_OPTb_OPT)_OPT-a a mf:ShExEvaluationTest ;
    mf:name "(a_OPTb_OPT)_OPT a" ;    mf:action [
        qt:schema <(a_OPTb_OPT)_OPT.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result true .

:(a_OPTb_OPT)_OPT-b a mf:ShExEvaluationTest ;
    mf:name "(a_OPTb_OPT)_OPT b" ;    mf:action [
        qt:schema <(a_OPTb_OPT)_OPT.shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result true .

:(a_OPTb_OPT)_OPT-ab a mf:ShExEvaluationTest ;
    mf:name "(a_OPTb_OPT)_OPT ab" ;    mf:action [
        qt:schema <(a_OPTb_OPT)_OPT.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result true .

:(a_OPTb)_OPT-0 a mf:ShExEvaluationTest ;
    mf:name "(a_OPTb)_OPT 0" ;    mf:action [
        qt:schema <(a_OPTb)_OPT.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result true .

:(a_OPTb)_OPT-b a mf:ShExEvaluationTest ;
    mf:name "(a_OPTb)_OPT b" ;    mf:action [
        qt:schema <(a_OPTb)_OPT.shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result true .

:(a_OPTb)_OPT-ab a mf:ShExEvaluationTest ;
    mf:name "(a_OPTb)_OPT ab" ;    mf:action [
        qt:schema <(a_OPTb)_OPT.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result true .

:(a_OPTb)_OPT-a a mf:ShExEvaluationTest ;
    mf:name "(a_OPTb)_OPT a" ;    mf:action [
        qt:schema <(a_OPTb)_OPT.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result false .

:(ab_OPT)_OPT-0 a mf:ShExEvaluationTest ;
    mf:name "(ab_OPT)_OPT 0" ;    mf:action [
        qt:schema <(ab_OPT)_OPT.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result true .

:(ab_OPT)_OPT-a a mf:ShExEvaluationTest ;
    mf:name "(ab_OPT)_OPT a" ;    mf:action [
        qt:schema <(ab_OPT)_OPT.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result true .

:(ab_OPT)_OPT-ab a mf:ShExEvaluationTest ;
    mf:name "(ab_OPT)_OPT ab" ;    mf:action [
        qt:schema <(ab_OPT)_OPT.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result true .

:(ab_OPT)_OPT-b a mf:ShExEvaluationTest ;
    mf:name "(ab_OPT)_OPT b" ;    mf:action [
        qt:schema <(ab_OPT)_OPT.shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result false .

:a_OR_(b)-a a mf:ShExEvaluationTest ;
    mf:name "a_OR_(b) a" ;    mf:action [
        qt:schema <a_OR_(b).shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result true .

:a_OR_(b)-b a mf:ShExEvaluationTest ;
    mf:name "a_OR_(b) b" ;    mf:action [
        qt:schema <a_OR_(b).shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result true .

:a_OR_(b)-0 a mf:ShExEvaluationTest ;
    mf:name "a_OR_(b) 0" ;    mf:action [
        qt:schema <a_OR_(b).shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result false .

:a_OR_(b)-ab a mf:ShExEvaluationTest ;
    mf:name "a_OR_(b) ab" ;    mf:action [
        qt:schema <a_OR_(b).shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result false .

:(a_OR_b)-a a mf:ShExEvaluationTest ;
    mf:name "(a_OR_b) a" ;    mf:action [
        qt:schema <(a_OR_b).shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result true .

:(a_OR_b)-b a mf:ShExEvaluationTest ;
    mf:name "(a_OR_b) b" ;    mf:action [
        qt:schema <(a_OR_b).shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result true .

:(a_OR_b)-0 a mf:ShExEvaluationTest ;
    mf:name "(a_OR_b) 0" ;    mf:action [
        qt:schema <(a_OR_b).shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result false .

:(a_OR_b)-ab a mf:ShExEvaluationTest ;
    mf:name "(a_OR_b) ab" ;    mf:action [
        qt:schema <(a_OR_b).shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result false .

:a(b_OR_c)-ab a mf:ShExEvaluationTest ;
    mf:name "a(b_OR_c) ab" ;    mf:action [
        qt:schema <a(b_OR_c).shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result true .

:a(b_OR_c)-ac a mf:ShExEvaluationTest ;
    mf:name "a(b_OR_c) ac" ;    mf:action [
        qt:schema <a(b_OR_c).shex> ;
        qt:data <ac.ttl>
    ] ;
    mf:result true .

:a(b_OR_c)-a a mf:ShExEvaluationTest ;
    mf:name "a(b_OR_c) a" ;    mf:action [
        qt:schema <a(b_OR_c).shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result false .

:a(b_OR_c)-abc a mf:ShExEvaluationTest ;
    mf:name "a(b_OR_c) abc" ;    mf:action [
        qt:schema <a(b_OR_c).shex> ;
        qt:data <abc.ttl>
    ] ;
    mf:result false .

:((ab)_OPTc)_OPT-0 a mf:ShExEvaluationTest ;
    mf:name "((ab)_OPTc)_OPT 0" ;    mf:action [
        qt:schema <((ab)_OPTc)_OPT.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result true .

:((ab)_OPTc)_OPT-c a mf:ShExEvaluationTest ;
    mf:name "((ab)_OPTc)_OPT c" ;    mf:action [
        qt:schema <((ab)_OPTc)_OPT.shex> ;
        qt:data <c.ttl>
    ] ;
    mf:result true .

:((ab)_OPTc)_OPT-abc a mf:ShExEvaluationTest ;
    mf:name "((ab)_OPTc)_OPT abc" ;    mf:action [
        qt:schema <((ab)_OPTc)_OPT.shex> ;
        qt:data <abc.ttl>
    ] ;
    mf:result true .

:((ab)_OPTc)_OPT-a a mf:ShExEvaluationTest ;
    mf:name "((ab)_OPTc)_OPT a" ;    mf:action [
        qt:schema <((ab)_OPTc)_OPT.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result false .

:((ab)_OPTc)_OPT-b a mf:ShExEvaluationTest ;
    mf:name "((ab)_OPTc)_OPT b" ;    mf:action [
        qt:schema <((ab)_OPTc)_OPT.shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result false .

:((ab)_OPTc)_OPT-ab a mf:ShExEvaluationTest ;
    mf:name "((ab)_OPTc)_OPT ab" ;    mf:action [
        qt:schema <((ab)_OPTc)_OPT.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result false .

:((ab_OPT)_OPTc)_OPT-0 a mf:ShExEvaluationTest ;
    mf:name "((ab_OPT)_OPTc)_OPT 0" ;    mf:action [
        qt:schema <((ab_OPT)_OPTc)_OPT.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result true .

:((ab_OPT)_OPTc)_OPT-c a mf:ShExEvaluationTest ;
    mf:name "((ab_OPT)_OPTc)_OPT c" ;    mf:action [
        qt:schema <((ab_OPT)_OPTc)_OPT.shex> ;
        qt:data <c.ttl>
    ] ;
    mf:result true .

:((ab_OPT)_OPTc)_OPT-ac a mf:ShExEvaluationTest ;
    mf:name "((ab_OPT)_OPTc)_OPT ac" ;    mf:action [
        qt:schema <((ab_OPT)_OPTc)_OPT.shex> ;
        qt:data <ac.ttl>
    ] ;
    mf:result true .

:((ab_OPT)_OPTc)_OPT-abc a mf:ShExEvaluationTest ;
    mf:name "((ab_OPT)_OPTc)_OPT abc" ;    mf:action [
        qt:schema <((ab_OPT)_OPTc)_OPT.shex> ;
        qt:data <abc.ttl>
    ] ;
    mf:result true .

:((ab_OPT)_OPTc)_OPT-a a mf:ShExEvaluationTest ;
    mf:name "((ab_OPT)_OPTc)_OPT a" ;    mf:action [
        qt:schema <((ab_OPT)_OPTc)_OPT.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result false .

:((ab_OPT)_OPTc)_OPT-b a mf:ShExEvaluationTest ;
    mf:name "((ab_OPT)_OPTc)_OPT b" ;    mf:action [
        qt:schema <((ab_OPT)_OPTc)_OPT.shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result false .

:((ab_OPT)_OPTc)_OPT-ab a mf:ShExEvaluationTest ;
    mf:name "((ab_OPT)_OPTc)_OPT ab" ;    mf:action [
        qt:schema <((ab_OPT)_OPTc)_OPT.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result false .

:((ab_OPT)_OPTc)_OPT-bc a mf:ShExEvaluationTest ;
    mf:name "((ab_OPT)_OPTc)_OPT bc" ;    mf:action [
        qt:schema <((ab_OPT)_OPTc)_OPT.shex> ;
        qt:data <bc.ttl>
    ] ;
    mf:result false .

:((a_OPTb)_OPTc)_OPT-0 a mf:ShExEvaluationTest ;
    mf:name "((a_OPTb)_OPTc)_OPT 0" ;    mf:action [
        qt:schema <((a_OPTb)_OPTc)_OPT.shex> ;
        qt:data <0.ttl>
    ] ;
    mf:result true .

:((a_OPTb)_OPTc)_OPT-c a mf:ShExEvaluationTest ;
    mf:name "((a_OPTb)_OPTc)_OPT c" ;    mf:action [
        qt:schema <((a_OPTb)_OPTc)_OPT.shex> ;
        qt:data <c.ttl>
    ] ;
    mf:result true .

:((a_OPTb)_OPTc)_OPT-bc a mf:ShExEvaluationTest ;
    mf:name "((a_OPTb)_OPTc)_OPT bc" ;    mf:action [
        qt:schema <((a_OPTb)_OPTc)_OPT.shex> ;
        qt:data <bc.ttl>
    ] ;
    mf:result true .

:((a_OPTb)_OPTc)_OPT-abc a mf:ShExEvaluationTest ;
    mf:name "((a_OPTb)_OPTc)_OPT abc" ;    mf:action [
        qt:schema <((a_OPTb)_OPTc)_OPT.shex> ;
        qt:data <abc.ttl>
    ] ;
    mf:result true .

:((a_OPTb)_OPTc)_OPT-a a mf:ShExEvaluationTest ;
    mf:name "((a_OPTb)_OPTc)_OPT a" ;    mf:action [
        qt:schema <((a_OPTb)_OPTc)_OPT.shex> ;
        qt:data <a.ttl>
    ] ;
    mf:result false .

:((a_OPTb)_OPTc)_OPT-b a mf:ShExEvaluationTest ;
    mf:name "((a_OPTb)_OPTc)_OPT b" ;    mf:action [
        qt:schema <((a_OPTb)_OPTc)_OPT.shex> ;
        qt:data <b.ttl>
    ] ;
    mf:result false .

:((a_OPTb)_OPTc)_OPT-ab a mf:ShExEvaluationTest ;
    mf:name "((a_OPTb)_OPTc)_OPT ab" ;    mf:action [
        qt:schema <((a_OPTb)_OPTc)_OPT.shex> ;
        qt:data <ab.ttl>
    ] ;
    mf:result false .

:((a_OPTb)_OPTc)_OPT-ac a mf:ShExEvaluationTest ;
    mf:name "((a_OPTb)_OPTc)_OPT ac" ;    mf:action [
        qt:schema <((a_OPTb)_OPTc)_OPT.shex> ;
        qt:data <ac.ttl>
    ] ;
    mf:result false .

