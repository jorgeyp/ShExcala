@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix mf:     <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix qt:     <http://www.w3.org/2001/sw/DataAccess/tests/test-query#> .
@prefix sh:     <http://www.w3.org/ns/shacl#> .
@prefix sht:    <http://www.w3.org/ns/shacl/test-suite#> .
@prefix dawgt:  <http://www.w3.org/2001/sw/DataAccess/tests/test-dawg#> .
@prefix dc:     <http://purl.org/dc/elements/1.1/> .
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#> .
@prefix ex:     <http://example.org/> .
@prefix td:  	<http://www.w3.org/2006/03/test-description#> .
@base <http://www.w3.org/ns/shacl#> .
 
<> a mf:Manifest ;
   rdfs:label "Manifest file - Compact syntax" ;
   rdfs:comment "Manifest file Compact syntax tests" ;
   dc:creator "Jose Labra";
   dc:date "2015-06-02"^^<xsd:date> ;
   mf:entries (
    <singleIRI_IRI_pass>
    <singleIRI_BNode_fail>
    <singleBNode_IRI_fail>
    <singleBNode_BNode_pass>
   ) .

<singleIRI_IRI_pass> a sht:MatchNodeShape ;
   mf:name "Compact syntax: single IRI - IRI -> (pass)" ;
   mf:action [
 	 sht:data <singleIRI.ttl> ; 
 	 sht:data-format sht:TURTLE ;
     sht:schema <tripleConstraintIRI.shc> ; 
     sht:schema-format sht:SHACLC   ; 
 	 sht:node ex:x ;
 	 sht:shape ex:shape 
	 ] ;
   mf:result true ; 
   mf:status sht:proposed
   .

<singleIRI_Bnode_fail> a sht:MatchNodeShape ;
   mf:name "Compact syntax: single IRI - BNode (fail)" ;
   mf:action [
 	 sht:data <singleIRI.ttl> ; 
 	 sht:data-format sht:TURTLE ;
     sht:schema <tripleConstraintBNode.shc> ; 
     sht:schema-format sht:SHACLC   ; 
 	 sht:node ex:x ;
 	 sht:shape ex:shape 
	 ] ;
   mf:result false ; 
   mf:status sht:proposed
   .

<singleBNode_IRI_fail> a sht:MatchNodeShape ;
   mf:name "Compact syntax: single BNode - IRI -> (fail)" ;
   mf:action [
 	 sht:data <singleBNode.ttl> ; 
 	 sht:data-format sht:TURTLE ;
     sht:schema <tripleConstraintIRI.shc> ; 
     sht:schema-format sht:SHACLC   ; 
 	 sht:node ex:x ;
 	 sht:shape ex:shape 
	 ] ;
   mf:result false ;
   mf:status sht:proposed
   .

<singleBNode_BNode_pass> a sht:MatchNodeShape ;
   mf:name "Compact syntax: single BNode - BNode -> (pass)" ;
   mf:action [
 	 sht:data <singleBNode.ttl> ; 
 	 sht:data-format sht:TURTLE ;
     sht:schema <tripleConstraintBNode.shc> ; 
     sht:schema-format sht:SHACLC   ; 
 	 sht:node ex:x ;
 	 sht:shape ex:shape 
	 ] ;
   mf:result true ;
   mf:status sht:proposed
   .
